import { Driver } from '../../../drivers/domain/models/driver.model';
import { Passenger } from '../../../passengers/domain/models/passenger.model';
export type TripStatus = 'REQUESTED' | 'ONGOING' | 'FINISHED' | 'CANCELLED' | 'NO_SHOW';
export declare class Trip {
    private readonly id;
    private driverId?;
    private passengerId;
    private originLat;
    private originLong;
    private destLat;
    private destLong;
    private distanceKm?;
    private durationSec?;
    private fare?;
    private currency;
    private status;
    private readonly requestedAt;
    private startedAt?;
    private finishedAt?;
    private updatedAt;
    private driver?;
    private passenger?;
    private invoiceId?;
    constructor(props: {
        id?: string;
        driverId?: string;
        passengerId: string;
        originLat: number;
        originLong: number;
        destLat: number;
        destLong: number;
        distanceKm?: number;
        durationSec?: number;
        fare?: number;
        currency?: string;
        status?: TripStatus;
        requestedAt?: Date;
        startedAt?: Date;
        finishedAt?: Date;
        updatedAt?: Date;
        driver?: Partial<Driver>;
        passenger?: Partial<Passenger>;
        invoiceId?: string;
    });
    assignDriver(driverId: string): void;
    getDriverDetails(): Partial<Driver> | undefined;
    getPassengerDetails(): Partial<Passenger> | undefined;
    start(): void;
    complete(): void;
    cancel(): void;
    getId(): string;
    getDriverId(): string | undefined;
    getPassengerId(): string;
    getOriginLat(): number;
    getOriginLong(): number;
    getDestLat(): number;
    getDestLong(): number;
    getDistanceKm(): number | undefined;
    getDurationSec(): number | undefined;
    getFare(): number | undefined;
    getCurrency(): string;
    getStatus(): TripStatus;
    getRequestedAt(): Date;
    getStartedAt(): Date | undefined;
    getFinishedAt(): Date | undefined;
    getUpdatedAt(): Date;
    getInvoiceId(): string | undefined;
    toJSON(): {
        id: string;
        driverId: string | undefined;
        passengerId: string;
        originLat: number;
        originLong: number;
        destLat: number;
        destLong: number;
        distanceKm: number | undefined;
        durationSec: number | undefined;
        fare: number | undefined;
        currency: string;
        status: TripStatus;
        requestedAt: Date;
        startedAt: Date | undefined;
        finishedAt: Date | undefined;
        updatedAt: Date;
    };
}
